:root {
  --background-color--default: rgb(204, 204, 204);
  --background-color--inactive: rgb(220, 220, 220);
  --border-color--dark: rgb(38, 38, 38);
  --border-color--default: var(--border-color--dark);
  --border-color--light: rgb(140, 140, 140);
  --border-radius: 0.75rem;
  --border-width: 0.0625rem;
  --box-shadow--high: 0.125rem 0.125rem 0.125rem rgba(0, 0, 0, 0.8);
  --box-shadow--high--inset: inset var(--border-width) var(--border-width)
      var(--color--highlight),
    inset calc(var(--border-width) * -1) calc(var(--border-width) * -1)
      var(--color--lowlight);
  --box-shadow--low: 0.125rem 0.125rem 0.125rem rgba(0, 0, 0, 0.15);
  --box-shadow--low--inset: inset var(--border-width) var(--border-width)
      var(--color--lowlight),
    inset calc(var(--border-width) * -1) calc(var(--border-width) * -1)
      var(--color--highlight);
  --color--highlight: rgba(255, 255, 255, 0.6);
  --color--lowlight: rgba(0, 0, 0, 0.25);
  --cursor--default: url("/themes/mac-os-classic/default.svg") 7 4, default;
  --cursor--pointer: url("/themes/mac-os-classic/pointer.svg") 8 3, pointer;
  --cursor--text: url("/themes/mac-os-classic/text.svg") 9 10, text;
  --font-family--default: arial;
  --font-family--monospace: ui-monospace, Menlo, Monaco, "Cascadia Mono",
    "Segoe UI Mono", "Roboto Mono", "Oxygen Mono", "Ubuntu Monospace",
    "Source Code Pro", "Fira Mono", "Droid Sans Mono", "Courier New", monospace;
  --font-family--system: var(--font-family--charcoal);
  --scrollbar-width: 1rem;
  --system-bar-height: 1.5rem;
  --text-color--dark: rgb(0, 0, 0);
  --text-color--default: var(--text-color--dark);
  --text-color--disabled: rgb(160, 160, 160);
  --text-color--light: rgb(255, 255, 255);
  --title-bar-height: 1.625rem;
  --window-padding: 0.25rem;

  border-radius: var(--border-radius);
  contain: paint;
}

body {
  background: url(./background.png) rgb(48, 48, 48);
  margin: var(--system-bar-height) 0 0;
}

::backdrop {
  background-color: rgb(0, 0, 0);
}

::selection {
  background-color: rgb(204, 204, 255);
  color: var(--text-color--dark);
}

.clock {
  font-size: 0.875rem;
  line-height: var(--system-bar-height);
  padding: 0 0.5rem;
  user-select: none;
}

.content {
  background-color: rgb(255, 255, 255);
  color: var(--text-color--default);
  flex: 1 1 auto;
  isolation: isolate;
  overflow: hidden;
  position: relative;
}

.dialog {
  align-items: center;
  background-color: rgb(0, 0, 0);
  color: var(--text-color--light);
  display: flex;
  flex-direction: column;
  font-size: 0.9375rem;
  gap: 0.5rem;
  justify-content: center;

  &:focus {
    outline: 0;
  }

  > .title-bar + svg {
    height: 7.5rem;
    width: 7.5rem;
  }

  > * {
    margin: 0;
  }
}

.grid {
  align-items: start;
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(auto-fill, 6rem);
  justify-items: center;
  min-height: 100%;
  padding: 1rem;

  > mark {
    background: transparent;
    border-color: var(--border-color--light);
    border-style: dotted;
    border-width: var(--border-width);
    content: "";
    position: fixed;

    &::after {
      border-color: inherit;
      border-style: inherit;
      border-width: inherit;
      content: "";
      inset: 0;
      position: absolute;
    }
  }
}

.icon {
  align-items: center;
  border-radius: 0.5rem;
  display: flex;
  flex-direction: column;
  font-family: inherit;
  gap: 0.25rem;
  max-height: 100%;
  width: 100%;

  > svg {
    aspect-ratio: 1 / 1;
    margin: 0 25%;
    width: 50%;
  }

  &:focus > svg {
    filter: brightness(0.4);
  }

  > label {
    background-color: var(--color--highlight);
    color: var(--text-color--default);
    font-size: 0.875rem;
    font-weight: 400;
    max-width: 100%;
    overflow: hidden;
    padding: 0 0.125em;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  &:focus > label {
    background-color: rgba(0, 0, 0, 0.8);
    color: rgb(204, 204, 204);
  }
}

.menu {
  display: flex;
  list-style: none;
  margin: 0;
  padding: 0;

  &[aria-orientation="horizontal"] {
    flex-direction: row;
  }

  &[aria-orientation="horizontal"] & {
    left: 0;
    top: 100%;
  }

  &[aria-orientation="vertical"] {
    flex-direction: column;
  }

  &[aria-orientation="vertical"] & {
    right: calc(100% - var(--border-width));
    top: 0;
  }

  &[role="menu"] {
    background-color: var(--background-color--inactive);
    border-width: var(--border-width);
    box-shadow: var(--box-shadow-elevation--high), var(--box-shadow--high);
    color: var(--text-color--dark);
    display: none;
    flex-direction: column;
    max-width: 20rem;
    min-width: 5rem;
    position: absolute;
    z-index: 100;

    [aria-expanded="true"] + & {
      display: block;
    }

    & & {
      left: 100%;
      right: unset;
      top: 0;
    }
  }
}

.menu-button {
  box-shadow: var(--box-shadow--high--inset);
  color: var(--background-color--inactive);

  &::after {
    content: "⁞";
    display: inline-block;
    font-family: var(--font-family--monospace);
    font-size: 1.125rem;
    line-height: var(--system-bar-height);
    text-shadow: calc(var(--border-width) * -0.5)
        calc(var(--border-width) * -0.5) 0 rgba(0, 0, 0, 0.6),
      calc(var(--border-width) * 0.5) calc(var(--border-width) * 0.5) 0
        rgba(255, 255, 255, 0.6);
  }

  &:active {
    background-color: var(--border-color--light);
    box-shadow: var(--box-shadow--low--inset);
    color: var(--border-color--light);
  }
}

.menuitem {
  display: flex;
  position: relative;

  &[role="separator"] {
    border-color: var(--color--lowlight) transparent var(--color--highlight);
    border-width: var(--border-width) 0;
    margin: 0.125rem 0;
  }

  > .menuitem-button {
    align-items: center;
    color: inherit;
    display: flex;
    font-size: 0.875rem;
    font-weight: 500;
    gap: 0.5rem;
    line-height: 1.2;
    text-decoration: none;
    user-select: none;

    &[aria-checked="true"] {
      &::before {
        content: "¬";
        font-family: var(--font-family--monospace);
        font-size: 1.25rem;
        font-weight: 700;
        left: 0.25rem;
        position: absolute;
        transform: rotate(135deg);
      }
    }

    &[aria-disabled="true"] {
      color: var(--text-color--disabled);
    }

    &[aria-expanded="true"] {
      background-color: rgb(51, 51, 148);
      color: rgb(255, 255, 255);
    }

    > svg {
      flex: 0 0 1rem;
      height: 1rem;
      width: 1rem;
    }

    > label {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }

  .menu.isCollapsed > & > .menuitem-button > label {
    display: none;
  }

  [aria-orientation="horizontal"] > & {
    > .menuitem-button {
      padding: 0 0.5rem;
    }
  }

  [aria-orientation="vertical"] > & {
    > .menuitem-button {
      padding: 0.25rem 0.5rem;
      width: 100%;
    }
  }

  [role="menu"] > & {
    > .menuitem-button {
      gap: 0.25rem;
      height: 1.25rem;
      padding: 0 1.25rem;
      width: 100%;

      &:not([aria-checked="true"], [aria-disabled="true"]) {
        &:hover {
          background-color: rgb(51, 51, 148);
          color: rgb(255, 255, 255);
        }
      }

      &[aria-haspopup="menu"] {
        justify-content: space-between;

        &::after {
          content: "►";
          font-size: 0.875rem;
          position: absolute;
          right: 0.125rem;
          transform: scaleX(0.5);
        }
      }
    }
  }
}

.system-bar {
  background-color: var(--background-color--inactive);
  border-radius: var(--border-radius, 0) var(--border-radius, 0) 0 0;
  border-width: 0 0 var(--border-width);
  box-shadow: var(--box-shadow--high--inset);
  display: flex;
  font-family: var(--font-family--system);
  height: var(--system-bar-height);
  inset: 0;
  padding: 0 1rem;
  position: fixed;
  z-index: 1000;

  &::before {
    content: "";
    flex: 1 0 1rem;
    order: -1;
  }

  > .menu:first-of-type {
    order: -2;

    > .menuitem:first-of-type > .menuitem-button > label {
      display: none;
    }
  }

  > .menu:last-of-type > .menuitem > .menu {
    left: unset;
    right: 0;
  }
}

.title {
  flex: 0 1 auto;
  font-size: 0.875rem;
  line-height: 1;
  margin: 0;
  order: 4;
  overflow: hidden;
  text-overflow: ellipsis;
  user-select: none;
  white-space: nowrap;
}

.title-bar {
  align-items: center;
  display: flex;
  font-family: var(--font-family--system);
  gap: 0.25rem;
  height: var(--title-bar-height);
  inset: 0;
  padding: var(--window-padding);
  position: absolute;
  z-index: 1;

  &::before,
  &::after {
    background: repeating-linear-gradient(
      var(--color--highlight),
      var(--color--highlight) calc(var(--border-width) * 1.25),
      var(--color--lowlight) calc(var(--border-width) * 1.25),
      var(--color--lowlight) calc(var(--border-width) * 2.5)
    );
    border-color: transparent var(--color--lowlight) transparent
      var(--color--highlight);
    border-width: 0 var(--border-width);
    content: "";
    flex: 1 1 auto;
    height: calc(var(--border-width) * 15);
    margin: calc(var(--border-width) * -1.5) 0.125rem 0;
    min-width: 1rem;
    visibility: hidden;
  }
  &::before {
    order: 2;
  }
  &::after {
    order: 5;
  }

  [aria-current="true"] &::before,
  [aria-current="true"] &::after {
    visibility: unset;
  }

  [aria-current="false"] & {
    filter: opacity(35%);
  }

  > svg {
    aspect-ratio: 1 / 1;
    flex-grow: 0;
    flex-shrink: 0;
    height: 100%;
    order: 3;
  }
}

.title-bar-button {
  aspect-ratio: 1 / 1;
  background-clip: content-box;
  background-image: linear-gradient(
    to bottom right,
    rgb(154, 154, 154),
    rgb(248, 248, 248)
  );
  border-color: var(--color--lowlight) var(--color--highlight)
    var(--color--highlight) var(--color--lowlight);
  border-width: var(--border-width);
  flex-grow: 0;
  flex-shrink: 0;
  height: 100%;
  position: relative;

  &::before {
    border-color: var(--color--highlight) var(--color--lowlight)
      var(--color--lowlight) var(--color--highlight);
    border-width: var(--border-width);
    content: "";
    inset: var(--border-width);
    outline-color: var(--border-color--dark);
    outline-style: solid;
    outline-width: var(--border-width);
    position: absolute;
  }

  &:active,
  &:focus-visible {
    background-image: linear-gradient(
      to bottom right,
      rgb(90, 90, 90),
      rgb(157, 157, 157)
    );

    &::before {
      border-color: var(--color--lowlight);
    }
  }

  [aria-current="false"] & {
    visibility: hidden;
  }

  &:nth-of-type(1) {
    order: 1;
  }

  &:nth-of-type(2) {
    order: 6;

    &::after {
      border-color: var(--border-color--dark);
      border-width: 0 calc(var(--border-width) * 1.5)
        calc(var(--border-width) * 1.5) 0;
      content: "";
      inset: 0 33% 33% 0;
      position: absolute;
    }
  }

  &:nth-of-type(3) {
    order: 7;

    &::after {
      border-color: var(--border-color--dark);
      border-width: calc(var(--border-width) * 1.5) 0
        calc(var(--border-width) * 1.5);
      content: "";
      inset: 34% 0;
      position: absolute;
    }
  }
}

.window {
  background-color: var(--background-color--inactive);
  box-shadow: var(--box-shadow--low);
  box-sizing: content-box;
  color: var(--text-color--dark);
  display: flex;
  flex-direction: column;
  left: 0;
  overflow: hidden;
  position: fixed;
  top: 0;

  &:focus {
    outline: 0;
  }

  &[aria-current="true"] {
    background-color: var(--background-color--default);
    box-shadow: var(--box-shadow--high);
  }

  &:has(> .title-bar) {
    padding-top: var(--title-bar-height);

    &:has(> .content) {
      padding-top: calc(var(--title-bar-height) - (var(--border-width) * 6));
    }
  }

  &::before {
    border-color: var(--border-color--light);
    border-width: var(--border-width);
    box-shadow: var(--box-shadow--high--inset);
    content: "";
    inset: 0;
    position: absolute;
    z-index: -2;
  }
  &[aria-current="true"]::before {
    border-color: var(--border-color--dark);
    box-shadow: var(--box-shadow--high--inset);
  }
  &::after {
    background-clip: content-box;
    background-color: rgb(255, 255, 255);
    border-color: var(--color--lowlight) var(--color--highlight)
      var(--color--highlight) var(--color--lowlight);
    border-width: var(--border-width);
    box-shadow: inset 0 0 0 var(--border-width) var(--border-color--dark);
    content: "";
    inset: var(--window-padding);
    position: absolute;
    z-index: -1;
  }
  &:has(> .title-bar)::after {
    top: var(--title-bar-height);
  }
  &:has(> .title-bar):has(> .content)::after {
    top: calc(var(--title-bar-height) - (var(--border-width) * 2));
  }

  > .content {
    margin: calc((var(--border-width) * 2) + var(--window-padding));
  }

  .react-resizable-handle {
    display: none;

    .content + & {
      display: unset;
    }
  }
}
