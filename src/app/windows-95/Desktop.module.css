:local .theme {
  --background-color--default: rgb(192 192 192);
  --background-color--active: rgb(0 0 128);
  --border-color--default: rgb(223 223 223);
  --border-color--high: var(--color--highlight) var(--color--lowlight)
    var(--color--lowlight) var(--color--highlight);
  --border-color--high--inset: var(--color--highlight--inset)
    var(--color--lowlight--inset) var(--color--lowlight--inset)
    var(--color--highlight--inset);
  --border-color--low: var(--color--lowlight) var(--color--highlight)
    var(--color--highlight) var(--color--lowlight);
  --border-color--low--inset: var(--color--lowlight--inset)
    var(--color--highlight--inset) var(--color--highlight--inset)
    var(--color--lowlight--inset);
  --border-width: 0.0625rem;
  --color--highlight: rgb(255 255 255);
  --color--highlight--inset: rgb(223 223 223);
  --color--lowlight: rgb(0 0 0);
  --color--lowlight--inset: rgb(128 128 128);
  --cursor--default: url("/themes/windows-95/default.svg") 0 0, default;
  --cursor--pointer: url("/themes/windows-95/pointer.svg") 0 0, pointer;
  --cursor--text: url("/themes/windows-95/text.svg") 0 0, text;
  --font-family--default: var(--font-family--ms-sans-serif);
  --system-bar-height: 2.125rem;
  --text-color--dark: rgb(0 0 0);
  --text-color--default: var(--text-color--dark);
  --text-color--light: rgb(255 255 255);

  body {
    background: rgb(0 128 128);
  }

  ::backdrop {
    background-color: rgb(0 0 0 / 10%);
  }

  ::selection {
    background-color: var(--background-color--active);
    color: var(--text-color--light);
  }

  .clock {
    font-size: 0.875rem;
    padding: 0 0.25rem;
    user-select: none;
  }

  .grid {
    align-items: start;
    display: grid;
    gap: 1.5rem 2rem;
    grid-auto-flow: column;
    grid-template-columns: repeat(auto-fill, 3rem);
    grid-template-rows: repeat(auto-fill, 4.75rem);
    justify-items: center;
    min-height: 100%;
    padding: 1rem;

    body > & {
      color: var(--text-color--light);
      inset: 0;
      padding-bottom: calc(1rem + var(--system-bar-height));
      position: fixed;
    }

    > mark {
      background: none;
      border-color: rgb(255 128 128);
      border-style: dotted;
      border-width: var(--border-width);
      content: "";
      position: absolute;
    }
  }

  .icon {
    align-items: center;
    display: flex;
    flex-direction: column;
    gap: 0.375rem;
    text-wrap-style: balance;

    &:focus {
      outline: 0;
    }

    > svg {
      aspect-ratio: 1;
      width: 2.5rem;
    }

    &:focus > svg {
      filter: drop-shadow(0 0 0 rgb(0 0 128));

      * {
        opacity: 0.5;
      }
    }

    > label {
      border-color: transparent;
      border-style: dotted;
      border-width: var(--border-width);
      font-size: 0.8125rem;
      font-weight: 400;
      max-width: 100%;
      padding: 0 0.125rem;
    }

    &:focus > label {
      background-color: var(--background-color--active);
      border-color: rgb(255 255 145);
    }
  }

  .menu {
    display: flex;
    list-style: none;
    margin: 0;
    padding: 0;

    &[aria-orientation="horizontal"] {
      flex-direction: row;
    }

    &[aria-orientation="horizontal"] & {
      left: 0;
      top: 100%;
    }

    &[aria-orientation="vertical"] {
      flex-direction: column;
    }

    &[aria-orientation="vertical"] & {
      right: calc(100% - var(--border-width));
      top: 0;
    }

    &[role="menu"] {
      background-color: var(--background-color--default);
      border-color: var(--color--highlight--inset) var(--color--lowlight)
        var(--color--lowlight) var(--color--highlight--inset);
      border-width: var(--border-width);
      color: var(--text-color--dark);
      display: none;
      flex-direction: column;
      max-width: 20rem;
      min-width: 5rem;
      padding: calc(var(--border-width) * 2);
      position: absolute;
      z-index: 100;

      [aria-expanded="true"] + & {
        display: block;
      }

      & & {
        left: 100%;
        right: unset;
        top: 0;
      }

      &::before {
        border-color: var(--color--highlight) var(--color--lowlight--inset)
          var(--color--lowlight--inset) var(--color--highlight);
        border-width: var(--border-width);
        content: "";
        inset: 0;
        position: absolute;
        z-index: -1;
      }

      &:has(> header) {
        padding-left: calc(1.5rem + var(--border-width) * 2);
      }

      > header {
        background-color: var(--color--lowlight--inset);
        color: var(--text-color--light);
        font-family: arial;
        font-size: 1.25rem;
        inset: calc(var(--border-width) * 2) auto calc(var(--border-width) * 2)
          calc(var(--border-width) * 2);
        letter-spacing: -0.075em;
        line-height: 1.5rem;
        padding: 0.375rem 0;
        position: absolute;
        text-orientation: sideways;
        transform: scale(-1, -1);
        writing-mode: vertical-lr;

        > b {
          color: var(--background-color--default);
          font-family: "arial black";
          font-weight: 900;
          margin-inline-end: 0.1em;
        }
      }
    }
  }

  .menuitem {
    display: flex;
    position: relative;

    &[role="separator"] {
      border-color: var(--color--lowlight--inset) transparent
        var(--color--highlight);
      border-width: var(--border-width) 0;
      margin: 0.125rem 0 0.25rem;
    }

    > .menuitem-button {
      align-items: center;
      color: inherit;
      cursor: var(--cursor--default);
      display: flex;
      font-size: 0.8125rem;
      font-weight: 500;
      gap: 0.5rem;
      line-height: 1.2;
      position: relative;
      text-decoration: none;
      user-select: none;

      &[aria-disabled="true"] {
        color: var(--text-color--disabled);
      }

      &[aria-expanded="true"] {
        background-color: var(--background-color--active);
        color: var(--text-color--light);
      }

      > svg {
        aspect-ratio: 1;
        flex: 0 0 1.5rem;
        width: 1.5rem;
      }

      > label {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }
    }

    [aria-orientation="horizontal"] > & {
      > .menuitem-button {
        height: 100%;
        padding: 0 0.3125rem;
      }
    }

    [aria-orientation="vertical"] > & {
      > .menuitem-button {
        padding: 0.3125rem 1.25rem 0.3125rem 0.75rem;
        width: 100%;
      }
    }

    [role="menu"] > & {
      > .menuitem-button {
        &:not([aria-checked="true"], [aria-disabled="true"]) {
          &:hover {
            background-color: var(--background-color--active);
            color: var(--text-color--light);
          }
        }

        &[aria-haspopup="menu"] {
          &::after {
            content: "â–º";
            font-size: 0.75rem;
            position: absolute;
            right: 0.125rem;
            transform: scaleX(0.5);
          }
        }
      }
    }
  }

  .system-bar {
    background-color: var(--background-color--default);
    border-width: var(--border-width) 0 0;
    box-shadow: inset 0 var(--border-width) var(--color--highlight);
    display: flex;
    gap: 0.375rem;
    height: var(--system-bar-height);
    inset: auto 0 0;
    padding: calc(var(--border-width) + 0.1875rem) 0.1875rem 0.1875rem;
    position: fixed;
    z-index: 1000;

    > .menu[aria-orientation="horizontal"] {
      flex: 0 0 auto;

      &:nth-of-type(2) {
        flex: 1;
        gap: 0.25rem;

        > .menuitem {
          flex: 0 1 10rem;
        }
      }

      > .menuitem {
        > .menuitem-button {
          border-color: var(--border-color--high);
          border-width: var(--border-width);
          width: 100%;

          &::before {
            border-color: var(--border-color--high--inset);
            border-width: var(--border-width);
            content: "";
            inset: 0;
            position: absolute;
            z-index: -1;
          }
          &::after {
            border-color: transparent;
            border-style: dotted;
            border-width: var(--border-width);
            content: "";
            inset: 0.1875rem;
            position: absolute;
            z-index: -1;
          }

          &:focus-visible {
            outline: 0;

            &::after {
              border-color: var(--color--lowlight);
            }
          }

          &[aria-expanded="true"] {
            border-color: var(--border-color--low);

            &::before {
              border-color: var(--border-color--low--inset);
            }
            &::after {
              border-color: var(--color--lowlight);
            }

            > * {
              transform: translate(var(--border-width), var(--border-width));
            }
          }
        }

        > .menu {
          bottom: 100%;
          top: unset;
        }
      }
    }
  }

  .tray {
    align-items: center;
    border-color: var(--color--lowlight--inset) var(--color--highlight)
      var(--color--highlight) var(--color--lowlight--inset);
    border-width: var(--border-width);
    display: flex;
    flex: 0 0 auto;
    gap: 0.5rem;
    justify-content: space-between;
    padding: 0 0.5rem;
    position: relative;
  }

  .tray-icon {
    flex: 0 0 1rem;
    height: 1rem;
    width: 1rem;
  }

  .tray-icons {
    display: flex;
    gap: 0.125rem;
    list-style: none;
    margin: 0;
    padding: 0;
  }
}
